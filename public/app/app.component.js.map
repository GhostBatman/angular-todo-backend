{"version":3,"sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;YASA;gBAQI,sBAAoB,eAAgC;oBARxD,iBAwEC;oBAhEuB,oBAAe,GAAf,eAAe,CAAiB;oBAW7C,kBAAa,GAAG;wBACnB,KAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAE,SAAS,CAAC,UAAC,IAAI;4BAChD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;wBACjC,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC;oBAEK,cAAS,GAAG,UAAC,QAAQ;wBACxB,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAE,SAAS,CAAC,UAAC,IAAI;4BACvD,KAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;4BAChC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;4BACzB,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;wBAC/B,CAAC,CAAC,CAAC;oBAGP,CAAC,CAAC;oBAEK,0BAAqB,GAAG,UAAC,IAAI;wBAChC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;wBACnC,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAE,SAAS,CAAC;wBACjD,CAAC,CAAC,CAAC;wBACH,KAAI,CAAC,aAAa,EAAE,CAAC;oBACzB,CAAC,CAAC;gBA/BF,CAAC;gBAED,+BAAQ,GAAR;oBACI,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,UAAU,CAAC;wBACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtC,CAAC,EAAE,IAAI,CAAC,CAAA;gBAEZ,CAAC;gBAyBM,oCAAa,GAApB;oBACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBACnB,IAAI,IAAI,GAAG;4BACP,QAAQ,EAAE,IAAI,CAAC,WAAW;4BAC1B,UAAU,EAAE,CAAC;4BACb,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE;yBAClC,CAAC;wBACF,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;6BACzD,SAAS,CAAC;wBACX,CAAC,CAAC,CAAC;wBACP,IAAI,CAAC,aAAa,EAAE,CAAC;wBACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBACzC,CAAC;gBACL,CAAC;gBAEM,iCAAU,GAAjB,UAAkB,IAAI;oBAClB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAE,SAAS,CAAC;oBACpD,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACzC,CAAC;gBAEM,wCAAiB,GAAxB;oBACI,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC;yBACpD,SAAS,CAAC;oBACP,CAAC,CAAC,CAAC;oBACX,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;gBA1EL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,MAAM;wBAChB,SAAS,EAAE,CAAC,mCAAe,CAAC;wBAC5B,WAAW,EAAE,iBAAiB;qBACjC,CAAC;;gCAAA;gBAyEF,mBAAC;YAAD,CAxEA,AAwEC,IAAA;YAxED,uCAwEC,CAAA","file":"app.component.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {TaskListService} from './task.list.service';\r\nimport 'rxjs/add/operator/map'\r\n\r\n@Component({\r\n    selector: 'main',\r\n    providers: [TaskListService],\r\n    templateUrl: 'main/index.html'\r\n})\r\nexport class AppComponent implements OnInit {\r\n    taskLists: any;\r\n    tasks: any;\r\n    title: any;\r\n    newTaskText: string;\r\n    currentTaskList: any;\r\n    newTaskListText: string;\r\n\r\n    constructor(private taskListService: TaskListService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getTasksLists();\r\n        setTimeout(function () {\r\n            this.changeTab(this.taskLists[0]);\r\n        }, 3000)\r\n\r\n    }\r\n\r\n    public getTasksLists = () => {\r\n        this.taskListService.getTaskLists() .subscribe((data) => {\r\n            this.taskLists = data.json();\r\n        });\r\n    };\r\n\r\n    public changeTab = (taskList) => {\r\n        this.taskListService.getTasks(taskList.id) .subscribe((data) => {\r\n            this.currentTaskList = taskList;\r\n            this.tasks = data.json();\r\n            this.title = taskList.name;\r\n        });\r\n\r\n\r\n    };\r\n\r\n    public changeTaskCheckStatus = (task) => {\r\n        task.is_checked = !task.is_checked;\r\n        this.taskListService.updateTask(task) .subscribe(() => {\r\n        });\r\n        this.getTasksLists();\r\n    };\r\n\r\n    public createNewTask() {\r\n        if (this.newTaskText) {\r\n            let task = {\r\n                taskText: this.newTaskText,\r\n                is_checked: 0,\r\n                tab_id: this.currentTaskList.id\r\n            };\r\n            this.taskListService.createTask(task, this.currentTaskList.id)\r\n                .subscribe(() => {\r\n                });\r\n            this.getTasksLists();\r\n            this.changeTab(this.currentTaskList);\r\n        }\r\n    }\r\n\r\n    public removeTask(task) {\r\n        this.taskListService.removeTask(task.id) .subscribe(() => {\r\n        });\r\n        this.getTasksLists();\r\n        this.changeTab(this.currentTaskList);\r\n    }\r\n\r\n    public createNewTaskList() {\r\n        this.taskListService.createTaskList(this.newTaskListText)\r\n            .subscribe(() => {\r\n                });\r\n        this.ngOnInit();\r\n    }\r\n\r\n\r\n}"],"sourceRoot":"/source/"}